import React from 'react';
import { Play, ArrowRight, ArrowLeft, CheckCircle } from 'lucide-react';
import WaterTankVisualization from './WaterTankVisualization';
import { useLanguage } from '../contexts/LanguageContext';

const WaterTankContent = ({ currentStep, setCurrentStep }) => {
  const { translate } = useLanguage();

  const renderStep = () => {
    switch (currentStep) {
      case 1:
        return (
          <div className="bg-bg-card rounded-lg p-6 shadow-sm border border-bg-neutral">
            <h3 className="text-lg font-semibold text-text-color mb-4">
              {translate('waterTankIntro')}
            </h3>
            <div className="bg-text-color/90 rounded-lg aspect-video flex items-center justify-center mb-4">
              <div className="text-center text-white">
                <Play className="w-16 h-16 mx-auto mb-2 opacity-70" />
                <p className="text-sm opacity-70">Video placeholder</p>
              </div>
            </div>
            <button
              onClick={() => setCurrentStep(2)}
              className="bg-accent-primary text-white px-6 py-2 rounded-md hover:bg-accent-primary/90 transition-colors flex items-center gap-2"
            >
              {translate('continue')} <ArrowRight className="w-4 h-4" />
            </button>
          </div>
        );

      case 2:
        return (
          <div className="bg-bg-card rounded-lg p-6 shadow-sm border border-bg-neutral">
            <h3 className="text-lg font-semibold text-text-color mb-4">
              {translate('waterTankProblem')}
            </h3>
            <div className="prose prose-sm max-w-none mb-6 text-text-color">
              <p className="leading-relaxed mb-4">
                Firma produkujÄ…ca zbiorniki na wodÄ™ chce zoptymalizowaÄ‡ swoje produkty. 
                MajÄ… ograniczonÄ… iloÅ›Ä‡ materiaÅ‚u na kaÅ¼dy zbiornik i chcÄ…, Å¼eby zbiornik 
                pomieÅ›ciÅ‚ jak najwiÄ™cej wody.
              </p>
              <div className="bg-blue-50 border border-blue-200 rounded-md p-4 mt-4">
                <p className="text-sm text-blue-800">
                  <strong>Zadanie:</strong> ZnajdÅº najlepsze proporcje cylindrycznego zbiornika 
                  (stosunek wysokoÅ›ci do promienia), Å¼eby zmieÅ›ciÅ‚ jak najwiÄ™cej wody przy 
                  ograniczonej iloÅ›ci materiaÅ‚u.
                </p>
              </div>
              <div className="bg-accent-secondary/10 border border-accent-secondary/30 rounded-md p-4 mt-4">
                <p className="text-sm text-accent-secondary">
                  ðŸ’¡ <strong>{translate('hint')}:</strong> PomyÅ›l o tym, jak zmienia siÄ™ objÄ™toÅ›Ä‡ 
                  w zaleÅ¼noÅ›ci od proporcji wysokoÅ›ci do promienia. Czy zbiornik powinien byÄ‡ 
                  wysoki i wÄ…ski, czy niski i szeroki?
                </p>
              </div>
            </div>
            <div className="flex justify-between">
              <button
                onClick={() => setCurrentStep(1)}
                className="bg-nav-bg/20 text-text-color px-6 py-2 rounded-md hover:bg-nav-bg/40 transition-colors flex items-center gap-2"
              >
                <ArrowLeft className="w-4 h-4" /> Wstecz
              </button>
              <button
                onClick={() => setCurrentStep(3)}
                className="bg-accent-primary text-white px-6 py-2 rounded-md hover:bg-accent-primary/90 transition-colors flex items-center gap-2"
              >
                {translate('startExploration')} <ArrowRight className="w-4 h-4" />
              </button>
            </div>
          </div>
        );

      case 3:
        return (
          <div className="space-y-6">
            <WaterTankVisualization />
            <div className="flex justify-between">
              <button
                onClick={() => setCurrentStep(2)}
                className="bg-nav-bg/20 text-text-color px-6 py-2 rounded-md hover:bg-nav-bg/40 transition-colors flex items-center gap-2"
              >
                <ArrowLeft className="w-4 h-4" /> Wstecz
              </button>
              <button
                onClick={() => setCurrentStep(4)}
                className="bg-accent-primary text-white px-6 py-2 rounded-md hover:bg-accent-primary/90 transition-colors flex items-center gap-2"
              >
                {translate('endExploration')} <ArrowRight className="w-4 h-4" />
              </button>
            </div>
          </div>
        );

      case 4:
        return (
          <div className="bg-bg-card rounded-lg p-6 shadow-sm border border-bg-neutral">
            <h3 className="text-lg font-semibold text-text-color mb-4">
              Analiza geometryczna
            </h3>
            <div className="prose prose-sm max-w-none mb-6 text-text-color">
              <p className="leading-relaxed mb-4">
                Teraz przeanalizujmy problem geometrycznie, bez uÅ¼ywania pochodnych.
              </p>
              
              <div className="bg-bg-light p-4 rounded-md mb-4">
                <h4 className="font-semibold mb-2">Wzory podstawowe:</h4>
                <p className="font-mono text-sm text-text-color mb-2">
                  <strong>ObjÄ™toÅ›Ä‡ cylindra:</strong> V = Ï€ Ã— rÂ² Ã— h
                </p>
                <p className="font-mono text-sm text-text-color mb-2">
                  <strong>Powierzchnia materiaÅ‚u:</strong> A = 2Ï€rÂ² + 2Ï€rh
                </p>
                <p className="text-sm text-text-color/70">
                  gdzie r = promieÅ„ podstawy, h = wysokoÅ›Ä‡
                </p>
              </div>

              <div className="bg-green-50 border border-green-200 rounded-md p-4 mb-4">
                <h4 className="font-semibold mb-2 text-green-800">Kluczowe spostrzeÅ¼enie:</h4>
                <p className="text-sm text-green-700 leading-relaxed">
                  Gdy mamy staÅ‚Ä… iloÅ›Ä‡ materiaÅ‚u, najlepsze proporcje to gdy <strong>wysokoÅ›Ä‡ 
                  rÃ³wna siÄ™ Å›rednicy podstawy</strong> (h = 2r). To oznacza, Å¼e zbiornik 
                  powinien byÄ‡ "kwadratowy\" w przekroju pionowym.
                </p>
              </div>

              <p className="leading-relaxed">
                To moÅ¼na sprawdziÄ‡ eksperymentalnie lub przez porÃ³wnanie rÃ³Å¼nych proporcji. 
                Zbiorniki zbyt wysokie majÄ… maÅ‚Ä… podstawÄ™, a zbyt pÅ‚askie majÄ… za duÅ¼Ä… powierzchniÄ™ 
                gÃ³rnÄ… i dolnÄ… w stosunku do objÄ™toÅ›ci.
              </p>
            </div>
            <div className="flex justify-between">
              <button
                onClick={() => setCurrentStep(3)}
                className="bg-nav-bg/20 text-text-color px-6 py-2 rounded-md hover:bg-nav-bg/40 transition-colors flex items-center gap-2"
              >
                <ArrowLeft className="w-4 h-4" /> Wstecz
              </button>
              <button
                onClick={() => setCurrentStep(5)}
                className="bg-accent-primary text-white px-6 py-2 rounded-md hover:bg-accent-primary/90 transition-colors flex items-center gap-2"
              >
                PrzejdÅº do zadaÅ„ <ArrowRight className="w-4 h-4" />
              </button>
            </div>
          </div>
        );

      case 5:
        return (
          <div className="bg-bg-card rounded-lg p-6 shadow-sm border border-bg-neutral">
            <h3 className="text-lg font-semibold text-text-color mb-4">
              Zadania praktyczne
            </h3>
            <div className="space-y-4 mb-6">
              <div>
                <label className="block text-sm font-medium text-text-color mb-2">
                  <strong>Zadanie 1:</strong> JeÅ›li promieÅ„ optymalnego zbiornika wynosi 3 metry, 
                  jaka powinna byÄ‡ jego wysokoÅ›Ä‡?
                </label>
                <input
                  type="text"
                  placeholder="h = ... metrÃ³w"
                  className="w-full p-3 border border-bg-neutral rounded-md focus:outline-none focus:ring-2 focus:ring-accent-primary/50 text-text-color"
                />
                <p className="text-xs text-text-color/60 mt-1">
                  WskazÃ³wka: h = 2r (wysokoÅ›Ä‡ = Å›rednica)
                </p>
              </div>
              
              <div>
                <label className="block text-sm font-medium text-text-color mb-2">
                  <strong>Zadanie 2:</strong> Oblicz objÄ™toÅ›Ä‡ tego optymalnego zbiornika 
                  (r = 3m, h = 6m)
                </label>
                <input
                  type="text"
                  placeholder="V = Ï€ Ã— rÂ² Ã— h = ..."
                  className="w-full p-3 border border-bg-neutral rounded-md focus:outline-none focus:ring-2 focus:ring-accent-primary/50 text-text-color"
                />
                <p className="text-xs text-text-color/60 mt-1">
                  WskazÃ³wka: V = Ï€ Ã— 3Â² Ã— 6 = Ï€ Ã— 9 Ã— 6 = 54Ï€ â‰ˆ 169,6 mÂ³
                </p>
              </div>
              
              <div>
                <label className="block text-sm font-medium text-text-color mb-2">
                  <strong>Zadanie 3:</strong> Jaka jest optymalna proporcja h/r dla kaÅ¼dego zbiornika?
                </label>
                <input
                  type="text"
                  placeholder="h/r = ..."
                  className="w-full p-3 border border-bg-neutral rounded-md focus:outline-none focus:ring-2 focus:ring-accent-primary/50 text-text-color"
                />
                <p className="text-xs text-text-color/60 mt-1">
                  WskazÃ³wka: JeÅ›li h = 2r, to h/r = 2
                </p>
              </div>
            </div>
            <div className="flex justify-between">
              <button
                onClick={() => setCurrentStep(4)}
                className="bg-nav-bg/20 text-text-color px-6 py-2 rounded-md hover:bg-nav-bg/40 transition-colors flex items-center gap-2"
              >
                <ArrowLeft className="w-4 h-4" /> Wstecz
              </button>
              <button
                className="bg-nav-bg text-white px-6 py-2 rounded-md hover:bg-nav-bg/90 transition-colors flex items-center gap-2"
              >
                <CheckCircle className="w-4 h-4" />
                {translate('checkAnswer')}
              </button>
            </div>
          </div>
        );

      default:
        return null;
    }
  };

  return (
    <div className="p-6">
      {renderStep()}
    </div>
  );
};

export default WaterTankContent;